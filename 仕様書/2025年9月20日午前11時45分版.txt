1. アプリケーション概要
本アプリは、生徒が実験で撮影した動画をブラウザ上で解析し、得られたデータをCSV形式で出力するWebアプリケーションです。教室の弱いWi-Fi環境に対応するため、動画ファイルの直接アップロードは行わず、URL経由での読み込みを基本とします。

2. 機能要件
2.1 動画の読み込みと表示
入力:

ユーザーは、Google Drive等のクラウドストレージに保存された動画ファイルの公開URLを入力します。

表示:

入力されたURLの動画を、Webページ上の専用エリアに表示します。

再生コントロール:

再生、一時停止、1フレーム単位での送り/戻し、再生速度の変更（例：0.5x, 1.0x, 2.0x）を可能とします。

現在の再生時刻（秒）とフレーム番号をリアルタイムで表示します。

フレームレートの自動認識:

OpenCVを用いて動画ファイルのメタデータからフレームレート（FPS）を自動で取得し、内部的な時間計算に利用します。

2.2 トラッキング機能
物体の動きを追跡し、時刻と座標データを収集します。

手動トラッキング:

ユーザーが動画表示エリアをクリックまたはタップすると、その位置のピクセル座標（x, y）と、その時点の動画再生時刻（t）を記録します。

間隔指定機能: ユーザーは、手動トラッキングを行う際の間隔を秒単位で指定できます（例：0.1秒ごと、0.5秒ごと）。アプリは自動で次のフレームに移動し、クリックを待機します。

自動トラッキング（拡張）:

ユーザーが動画の初期フレームで追跡したい物体を矩形で指定すると、以降のフレームでその物体を自動で追跡します。

自動追跡が失敗した場合は、手動で修正できるよう、再生を一時停止する機能を設けます。

ズーム・パン:

マウスのホイールやピンチジェスチャーで動画を拡大・縮小し、ドラッグ操作で表示領域を移動させることができます。

この機能は、手動でのトラッキング精度を向上させるために必須です。

2.3 スケール設定と座標補正
物理的な単位と静止した座標系でデータを取得できるようにします。

スケール設定:

動画内の既知の長さを持つ2点をクリックで指定し、ピクセル-メートル間の換算比率を設定します。これにより、全ての座標データをメートル単位に変換します。

座標補正:

カメラの動きを補正するため、動画内の静止している基準点（例：壁の角）を指定させます。アプリは各フレームの基準点の位置変化を元に、物体の座標を補正します。

2.4 データ出力
収集したデータを生徒が利用しやすい形式で出力します。

データの一覧表示:

収集された時刻と座標（ピクセルおよびメートル単位）のデータを、テーブル形式でWebページ上に一覧表示します。

CSV生成とダウンロード:

収集したすべてのデータをCSV形式で生成します。

「CSVダウンロード」ボタンを設置し、ユーザーが生成されたファイルを端末にダウンロードできるようにします。

3. 技術スタック
フロントエンド:

HTML, CSS, JavaScript (React or Vue.js)

理由: 複雑なUI（ズーム、パン、リアルタイムのデータ表示）を効率的に開発するため。

バックエンド:

Python (Flask)

理由: 軽量で開発が容易であり、Webアプリケーションのバックエンドとして適しているため。

ライブラリ:

OpenCV: 動画フレームの読み込み、自動追跡アルゴリズム、フレームレートの自動認識に必須。

NumPy: OpenCVの内部処理およびデータ変換に使用。

ホスティング:

Google Cloud Platform (GCP) or Heroku

理由: アプリをインターネット上に公開し、生徒がいつでもアクセスできるようにするため。

4. 運用・その他
対象ユーザー: 中学生・高校生の理科教師および生徒

動作環境: iPad (Safari/Chromeブラウザ) およびPC (Chrome/Edgeブラウザ)

保守: バグ修正、新機能の追加は計画的に行います。