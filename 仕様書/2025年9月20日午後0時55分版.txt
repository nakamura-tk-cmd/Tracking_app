1. アプリケーション概要
本アプリは、生徒がiPadで撮影した動画を、特別なアプリをインストールすることなく、ブラウザ上で解析するためのウェブツールです。GitHub Pagesなどの静的ホスティングサービスで公開することで、サーバー費用をかけずに運用できます。

2. 機能要件
2.1. 動画の読み込みと操作
入力: ユーザーは、iPadに保存された動画ファイルを、ウェブページ上のボタンから直接選択して読み込みます。

操作:

再生、一時停止、1フレーム単位での送り・戻しといった基本的な操作が可能です。

現在の再生時刻（秒）とフレーム番号をリアルタイムで表示します。

事前処理: 生徒は、トラッキング作業の前に、iPadの標準機能（写真アプリなど）で動画の時間的・空間的なトリミングを行い、ファイルサイズを小さくしておくことが推奨されます。

2.2. トラッキング機能
動画から物体の動きを抽出し、データを収集します。

手動トラッキング:

ユーザーが動画上の物体をクリックすると、その位置のピクセル座標（x, y）と、その時点の時刻（t）を記録します。

ユーザーは、手動トラッキングを行う際の間隔を秒単位で指定できます。

自動トラッキング:

ユーザーが追跡したい物体を初期フレームで指定すると、JavaScriptの**OpenCV.js**ライブラリを用いて、以降のフレームでその物体を自動で追跡します。

自動追跡が失敗した場合、手動で修正できるよう、再生を一時停止する機能を設けます。

ズーム・パン:

マウスのホイールやピンチジェスチャーで動画を拡大・縮小し、ドラッグ操作で表示領域を移動させることができます。これにより、手動および自動トラッキングの精度を向上させます。

2.3. スケール設定と座標変換
物理的な単位と静止した座標系でデータを取得できるようにします。

スケール設定:

動画内の既知の長さを持つ物体（例：物差し）の2点をクリックで指定し、ピクセルと物理単位（メートルなど）の換算比率を設定します。これにより、すべての座標データを物理単位に変換します。

座標補正:

カメラの動きを補正するため、動画内の静止している基準点（例：壁の角）を指定させます。OpenCV.jsのホモグラフィ変換機能を用いて、すべての座標を静止した座標系に変換します。

2.4. データ出力と連携
収集したデータを生徒が利用しやすい形式で出力します。

データ一覧表示:

収集された時刻と座標（物理単位）を、ウェブページ上のテーブルに一覧表示します。

CSV生成とダウンロード:

収集したすべてのデータをCSV形式で生成し、「CSVダウンロード」ボタンで生徒のiPadに保存できるようにします。ダウンロードしたCSVファイルは、iPadのExcelアプリで直接開くことができます。

3. 技術スタックと公開方法
技術スタック:

フロントエンド: HTML、CSS、JavaScript。

ライブラリ: OpenCV.js（画像・動画解析）、NumPy.js（数値計算）。

開発環境: あなたのWindowsマシン（VS Codeなど）。

公開方法:

GitHub Pagesのような、静的サイトホスティングサービスで完全に無料で公開します。

バックエンドサーバーは不要です。